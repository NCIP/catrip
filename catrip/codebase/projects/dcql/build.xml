<!-- ======================================================================= -->
<!-- caGrid 1.0 Data Service Tools build file                                -->
<!-- ======================================================================= -->
<project name="metadata" default="all" basedir=".">
    <!-- Environment -->
    <property environment="env" />
    <property file="${basedir}/build.properties" />
    <property file="${user.dir}/build.properties" />
    <property name="globus.dir" location="${env.GLOBUS_LOCATION}" />
    <property file="introduce.properties" />
    <property name="introduce.ns.excludes" value="" />

    <!-- build with debugging information -->
    <property name="java.debug" value="on" />
    <!-- enforce java 1.4 compliance at build time -->
    <property name="java.source" value="1.4" />

    <!-- Information -->
    <property name="project.version" value="1.0" />
    <property name="project.name" value="caGrid-${project.version}-data" />

    <!-- build output dirs -->
    <property name="build.dir" location="build" />
    <property name="build.jars.dir" location="build/lib" />

    <!-- jar names -->
   

    <!-- jar files -->
  


    <!-- stubs -->
    <property name="stubs.dir" location="${build.dir}/stubs" />
	
    <property name="stubs.src" location="${stubs.dir}/src" />
	
    <property name="stubs.dest" location="${stubs.dir}/classes" />
	
    <property name="stubs.jar.name" value="${project.name}-stubs.jar" />
    <property name="stubs.jar.file" value="${build.jars.dir}/${stubs.jar.name}" />
    <property name="ant.build.stubs" location="${globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />
    <property name="mapping.src" value="${basedir}/NStoPkg.properties" />

    <!-- schemas and namespace mappings -->
    <property name="schema.src" location="${globus.dir}/share/schema" />
    <property name="schema.dest" location="${build.dir}/schema" />
    


    <!-- libraries -->
    <property name="lib.dir" location="${basedir}/lib" />




	
    <!-- =============================================================== -->
    <!-- Classpaths                                                      -->
    <!-- =============================================================== -->
	<path id="base.classpath">
		<fileset dir="${lib.dir}">
	    	<include name="*.jar" />
	    </fileset>

	    <fileset dir="${globus.dir}/lib">
	    	<include name="*.jar" />
		</fileset>
	</path>
	

	

    <!-- sets up GT4 related variables -->
    <target name="setGlobus" if="env.GLOBUS_LOCATION">
        <!-- GT4 build files and directories-->
        <property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}" />
        <property name="build.stubs" location="${ext.globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />
        <property name="schema.src" location="${ext.globus.dir}/share/schema" />
        <property name="build.packages" location="${ext.globus.dir}/share/globus_wsrf_common/build-packages.xml" />
        <!-- Copied from build.stubs file, as there is no way to "append" to the value in the remote file -->
        <property name="GT4.ns.excludes" value="-x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl -x http://schemas.xmlsoap.org/ws/2004/04/trust -x http://schemas.xmlsoap.org/ws/2002/12/policy -x http://schemas.xmlsoap.org/ws/2002/07/utility -x http://schemas.xmlsoap.org/ws/2004/04/sc -x http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd -x http://www.w3.org/2000/09/xmldsig# -x http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd -x http://schemas.xmlsoap.org/ws/2004/09/enumeration" />
    	<property name="data.service.namespace" value="http://gov.nih.nci.cagrid.data/DataService"/>
    </target>


    <!-- creates output directories -->
    <target name="init">
        <mkdir dir="${build.dir}" />
          <mkdir dir="${build.jars.dir}" />

        <mkdir dir="${stubs.dir}" />
	   <mkdir dir="${stubs.src}" />
     <mkdir dir="${stubs.dest}" />
 	<mkdir dir="${schema.dest}" />
        <!-- copy schemas to the output directory -->
        <copy toDir="${schema.dest}">
            <fileset dir="schema" casesensitive="yes">
                <include name="Data/**/*.xsd" />
                <include name="Data/**/*.wsdl" />
            </fileset>
        </copy>


        <available property="stubs.present" type="dir" file="${stubs.dest}/gov/nih/nci/cagrid" />
    

        
    </target>


    <target name="copyGlobusSchemas" depends="init">
        <copy toDir="${schema.dest}">
            <fileset dir="${schema.src}" casesensitive="yes">
                <include name="wsrf/**/*" />
                <include name="ws/**/*" />
            </fileset>
        </copy>
    </target>


    <!-- merge namespace mappings with globus -->
    <target name="mergeNsMappings" depends="init">
        <ant antfile="${build.stubs}" target="mergePackageMapping">
            <property name="mapping.src" location="NStoPkg.properties" />
            <property name="mapping.dst" location="${build.dir}/NStoPkg.properties" />
        </ant>
    </target>


    <!-- generates source stubs for the schema defined types -->
    <target name="stubs" unless="stubs.present" depends="init, setGlobus, copyGlobusSchemas, mergeNsMappings">
        <property name="mapping.dst" value="${build.dir}/NStoPkg.properties" />
        <ant antfile="${ant.build.stubs}" target="mergePackageMapping" />
        <property name="mapping.file" value="${mapping.dst}" />
        <!-- generate stubs for CQLQuery classes -->
        <ant antfile="${ant.build.stubs}" target="generateStubs">
            <property name="source.stubs.dir" location="${schema.dest}/Data" />
            <property name="wsdl.file" value="Query.wsdl" />
            <property name="target.stubs.dir" location="${stubs.src}" />
        </ant>
        <!-- generate stubs for CQLQueryResponse classes -->
        <ant antfile="${ant.build.stubs}" target="generateStubs">
            <property name="source.stubs.dir" location="${schema.dest}/Data" />
            <property name="wsdl.file" value="Response.wsdl" />
            <property name="target.stubs.dir" location="${stubs.src}" />
        </ant>
    	
    </target>


    <!-- compiles the source stubs for the schema defined types -->
    <target name="compileStubs" depends="stubs">
        <delete dir="${stubs.src}/org/apache" />
        <javac srcdir="${stubs.src}" destdir="${stubs.dest}" debug="${java.debug}" source="${java.source}">
            <include name="**/*.java" />
            <classpath>
            	<path refid="base.classpath"/>
                <fileset dir="${globus.dir}/lib">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </javac>

    </target>







    <!-- compiles the extension source code -->
    <target name="compileExtension" depends="compileStubs">
        <javac srcdir="${extension.src.dir}" destdir="${build.extension.dest}" debug="${java.debug}" source="${java.source}">
            <classpath>
            	<path refid="base.classpath"/>
                <pathelement location="${stubs.dest}" />
>
                <pathelement location="${build.cql.dest}" />

                <fileset dir="${globus.dir}/lib">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </javac>
    </target>
	






    <!-- jars the stubs -->
    <target name="jarStubs" depends="compileStubs" description="Builds and jars just the stubs and beans">
        <jar destfile="${stubs.jar.file}">
            <fileset dir="${stubs.dest}">
                <include name="**/*.class" />
            </fileset>
            <fileset dir="${stubs.src}">
                <include name="**/*.java" />
            </fileset>
        </jar>
    </target>


    <!-- removes all build output -->
    <target name="clean">
        <delete dir="tmp" />
        <delete dir="${build.dir}" />
    </target>


    <!-- removes build output related to stubs and beans -->
    <target name="cleanStubs" description="Cleans the source generated for beans and stubs">
        <delete dir="${stubs.src}" />
        <delete dir="${stubs.dest}" />
    </target>
    

 






    <!-- build and jar everything -->
    <target name="all" depends="jarStubs" description="Builds and jars all the classes in the project" />
</project>
