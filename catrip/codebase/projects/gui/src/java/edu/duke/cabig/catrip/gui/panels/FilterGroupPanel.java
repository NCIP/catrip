/*
 * FilterGroupPanel.java
 *
 * Created on December 14, 2006, 1:03 PM
 */

package edu.duke.cabig.catrip.gui.panels;

import edu.duke.cabig.catrip.gui.components.PreferredHeightMarginBorderBoxLayout;
import edu.duke.cabig.catrip.gui.simplegui.FilterGroup;
import edu.duke.cabig.catrip.gui.simplegui.SimpleGuiRegistry;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JList;

import javax.swing.plaf.basic.BasicComboBoxRenderer;
import org.apache.commons.logging.Log;
import edu.duke.cabig.catrip.gui.util.Logger;
import java.awt.event.ItemEvent;
import javax.swing.JOptionPane;


/**
 *
 * @author  Sanjeev Agarwal
 */
public class FilterGroupPanel extends javax.swing.JPanel {
    
    private SimpleSearchPanel parentFilterPanel;
    private int numEntities = 0;
    // Define Logger..
    static Log log = Logger.getDefaultLogger();
    
    /** Creates new form FilterGroupPanel */
    public FilterGroupPanel() {
        initComponents();
        init();
    }
    
    
    public FilterGroupPanel(SimpleSearchPanel parent) {
        initComponents();
        init();
        this.parentFilterPanel = parent;
    }
    
    
    
    
    private void init(){
        PreferredHeightMarginBorderBoxLayout layout = new PreferredHeightMarginBorderBoxLayout(filterValuePanel, PreferredHeightMarginBorderBoxLayout.Y_AXIS);
        filterValuePanel.setLayout(layout);
    }
    
    
    public void removeRow(FilterGroupRowPanel frp){
        filterValuePanel.remove(frp);
        filterValuePanel.revalidate();
        filterValuePanel.repaint();
        
        numEntities--;
    }
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        filterValuePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        conditionCombo = new javax.swing.JComboBox();
        addFilterOrGroupBtn = new javax.swing.JButton();
        delGroupBtn = new javax.swing.JButton();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(FilterGroupPanel.class, "FilterGroupPanel.jPanel1.border.title"))); // NOI18N
        jScrollPane1.setBorder(null);
        filterValuePanel.setLayout(new java.awt.GridLayout(4, 1));

        jScrollPane1.setViewportView(filterValuePanel);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(FilterGroupPanel.class, "FilterGroupPanel.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(FilterGroupPanel.class, "FilterGroupPanel.jLabel2.text")); // NOI18N

        conditionCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "    AND    ", "    OR    " }));
        conditionCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                conditionComboItemStateChanged(evt);
            }
        });

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("edu/duke/cabig/catrip/gui/a11y/a11yBundle"); // NOI18N
        conditionCombo.getAccessibleContext().setAccessibleName(bundle.getString("edu.duke.cabig.catrip.gui.panels.FilterGroupPanel.conditionCombo.name")); // NOI18N
        conditionCombo.getAccessibleContext().setAccessibleDescription(bundle.getString("edu.duke.cabig.catrip.gui.panels.FilterGroupPanel.conditionCombo.description")); // NOI18N
        conditionCombo.getAccessibleContext().setAccessibleParent(this);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(42, 42, 42)
                        .add(jLabel1)
                        .add(192, 192, 192)
                        .add(jLabel2)
                        .add(12, 12, 12)
                        .add(conditionCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)))
                .add(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jLabel1)
                    .add(conditionCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(15, 15, 15)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addContainerGap())
        );

        addFilterOrGroupBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/duke/cabig/catrip/gui/resources/btn_icons/add.gif")));
        addFilterOrGroupBtn.setMnemonic('a');
        addFilterOrGroupBtn.setText(org.openide.util.NbBundle.getMessage(FilterGroupPanel.class, "FilterGroupPanel.addFilterOrGroupBtn.text")); // NOI18N
        addFilterOrGroupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFilterOrGroupBtnActionPerformed(evt);
            }
        });

        addFilterOrGroupBtn.getAccessibleContext().setAccessibleName(bundle.getString("edu.duke.cabig.catrip.gui.panels.FilterGroupPanel.addFilterOrGroupBtn.name")); // NOI18N
        addFilterOrGroupBtn.getAccessibleContext().setAccessibleDescription(bundle.getString("edu.duke.cabig.catrip.gui.panels.FilterGroupPanel.addFilterOrGroupBtn.description")); // NOI18N

        delGroupBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/duke/cabig/catrip/gui/resources/btn_icons/delete.gif")));
        delGroupBtn.setMnemonic('d');
        delGroupBtn.setText("Delete Group");
        delGroupBtn.setEnabled(false);
        delGroupBtn.getAccessibleContext().setAccessibleName(bundle.getString("edu.duke.cabig.catrip.gui.panels.FilterGroupPanel.delGroupBtn.name")); // NOI18N
        delGroupBtn.getAccessibleContext().setAccessibleDescription(bundle.getString("edu.duke.cabig.catrip.gui.panels.FilterGroupPanel.delGroupBtn.description")); // NOI18N

        okBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/duke/cabig/catrip/gui/resources/btn_icons/ok.gif")));
        okBtn.setMnemonic('o');
        okBtn.setText(org.openide.util.NbBundle.getMessage(FilterGroupPanel.class, "FilterGroupPanel.okBtn.text")); // NOI18N
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        okBtn.getAccessibleContext().setAccessibleName(bundle.getString("edu.duke.cabig.catrip.gui.panels.FilterGroupPanel.okBtn.name")); // NOI18N
        okBtn.getAccessibleContext().setAccessibleDescription(bundle.getString("edu.duke.cabig.catrip.gui.panels.FilterGroupPanel.okBtn.description")); // NOI18N

        cancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/duke/cabig/catrip/gui/resources/btn_icons/cancel.gif")));
        cancelBtn.setMnemonic('c');
        cancelBtn.setText(org.openide.util.NbBundle.getMessage(FilterGroupPanel.class, "FilterGroupPanel.cancelBtn.text")); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(addFilterOrGroupBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 245, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(21, 21, 21)
                        .add(delGroupBtn)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 149, Short.MAX_VALUE)
                        .add(okBtn)
                        .add(24, 24, 24)
                        .add(cancelBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelBtn)
                    .add(okBtn)
                    .add(delGroupBtn)
                    .add(addFilterOrGroupBtn))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void conditionComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_conditionComboItemStateChanged
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            log.info(" group condition changed. ");
        }
    }//GEN-LAST:event_conditionComboItemStateChanged
    
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // clear the current changed settings.. in this instance...
        log.info(" Adding Items into Group cancelled.. ");
        numEntities = 0;
        JDialog parent = (JDialog)getRootPane().getParent();
        parent.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed
    
    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        // create group only if there are more than 1 entities...
        if (numEntities > 1){
            
            // create the groups here.. and dispose this..
            int condition = conditionCombo.getSelectedIndex();
            FilterGroup fg = null;// = new FilterGroup();
            
            if (condition == 0){
                fg = FilterGroup.createANDGroup();
//            System.out.println("creating AND group...");
            }else if (condition == 1){
                fg = FilterGroup.createORGroup();
//            System.out.println("creating OR group...");
            }
            
            // check if any of the Foriegn Association Filter is being added to OR group.
            boolean foreignFilter = false;
            for (int i = 0; i < numEntities; i++) {
                FilterGroupRowPanel element = (FilterGroupRowPanel)filterValuePanel.getComponent(i);
                FilterRowPanel filterPanel = (FilterRowPanel)element.getFilterValueCombo().getSelectedItem();
                if (!foreignFilter){
                    foreignFilter = !filterPanel.isLocal();
                }
                
            }
            
            if (fg.isOR() && foreignFilter ){
                // show an alert taht can't add filters from foreign services to and OR group.
                new JOptionPane().showMessageDialog(this ,"Can not add Filter from Foreign Service to an OR group.\nReason: Feature not implemented.", "Error adding Filters to the OR group", JOptionPane.ERROR_MESSAGE );
            } else {
                log.info(" Adding Items into Group| id :"+fg.getUniqueId()+"| Condition: "+fg.getConditionString());
                for (int i = 0; i < numEntities; i++) {
                    FilterGroupRowPanel element = (FilterGroupRowPanel)filterValuePanel.getComponent(i);
                    Object filterPanel = element.getFilterValueCombo().getSelectedItem();
                    fg.add(filterPanel);
                    log.info(" Adding entity into group: "+fg.getUniqueId()+" Item:" + filterPanel);
                }
                SimpleGuiRegistry.addFilterSubGroup(fg);
                parentFilterPanel.reArrangeFilters();
                
                // signal the simple gui changed..
                SimpleGuiRegistry.setSimpleGuiChanged(true);
                SimpleGuiRegistry.setHasGroupsDefined(true);
            }
            
            
        }
        JDialog parent = (JDialog)getRootPane().getParent();
        parent.dispose();
        
    }//GEN-LAST:event_okBtnActionPerformed
    
    private void addFilterOrGroupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFilterOrGroupBtnActionPerformed
        if (numEntities < SimpleGuiRegistry.getNumGroupableEntities()){
            
            FilterGroupRowPanel frp = new FilterGroupRowPanel(this);
            
            ArrayList<FilterRowPanel> filters = SimpleGuiRegistry.getNonGroupFilters();
            for (int i = 0; i < filters.size(); i++) {
//            String filterVal = filters.get(i).getFilterTextValue();
                
                // add only local filters in the group group.
//                if (filters.get(i).isLocal()){
                frp.getFilterValueCombo().addItem(filters.get(i));
//                }
//            System.out.println("Filter IDs are :"+filters.get(i).getFilterId());
            }
            
            log.info(" Adding filter to the group: "+frp.getFilterValueCombo().getSelectedItem());
            
            // here you add the first level groups into the list for available items for grouping.
            // TODO -SB- uncomment the code below when you implement the nested gruping DCQL generation.
            /*
            ArrayList<FilterGroup> filterGroups = SimpleGuiRegistry.getFilterSubGroupList();
            for (int i = 0; i < filterGroups.size(); i++) {
                frp.getFilterValueCombo().addItem(filterGroups.get(i));
            }
             */
            
            frp.getFilterValueCombo().setSelectedIndex(numEntities);
            frp.getFilterValueCombo().setRenderer(new MyComboBoxRenderer());
            //MyComboBoxRenderer
            
            frp.setPreferredSize(new java.awt.Dimension(new Double(filterValuePanel.getBounds().getWidth()).intValue()-50, 40));
            
            filterValuePanel.add(frp);
            
            filterValuePanel.revalidate();
            filterValuePanel.repaint();
            
            numEntities++;
        }
    }//GEN-LAST:event_addFilterOrGroupBtnActionPerformed
    
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                CJFrame jf = new CJFrame();
//                jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//                jf.setBounds(10,10,750, 320);
//                jf.center();
//                jf.getContentPane().add(new FilterGroupPanel());
//                jf.setVisible(true);
//            }
//        });
//    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFilterOrGroupBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox conditionCombo;
    private javax.swing.JButton delGroupBtn;
    private javax.swing.JPanel filterValuePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okBtn;
    // End of variables declaration//GEN-END:variables
    
}


class MyComboBoxRenderer extends BasicComboBoxRenderer {
    public Component getListCellRendererComponent(JList list, Object value,
            int index, boolean isSelected, boolean cellHasFocus) {
        if (value instanceof FilterGroup){
            list.setToolTipText(  ((FilterGroup)value).getToolTipText() );
        } else if (value instanceof FilterRowPanel){
            FilterRowPanel pnl = (FilterRowPanel)value;
            boolean foreignFilter = !pnl.isLocal();
            if (foreignFilter){
                list.setToolTipText(  (pnl.getToolTipText() + " : A Filter from Foreign Service.") );
            } else {
                list.setToolTipText(  (pnl.getToolTipText()) );
            }
            
        }
        return super.getListCellRendererComponent( list,  value, index,  isSelected,  cellHasFocus);
    }
}
