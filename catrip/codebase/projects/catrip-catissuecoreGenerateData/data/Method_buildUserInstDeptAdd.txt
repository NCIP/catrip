	public void buildUserInstDeptAdd(int maxrecs,String[] col1,String[] col2,String[] col3,String[] col4,String[] col5,String[] col6,String[] col7,String[] col8,String[] col9,String[] col10,String[] col11,String[] col12,String[] col13,String[] col14,String[] col15) throws ParseException
	{
			List result=null;
			if (DEBUG) System.out.println("\tInside buildSiteInstDeptAdd()");
			
			String[][] dataInsertTable = new String[maxrecs][15];
			
			Object[] objsArr = new Object[4];
			int objcnt=-1;
			
			int insrow=0;

			//load the array
			for (int rowcnt = 0; rowcnt < col1.length; rowcnt++) {
				//USER STUFF
					//UserComments
					dataInsertTable[insrow][0]=rmvTrailingBlanks(col1[rowcnt]);
					//EmailAddress
					dataInsertTable[insrow][1]=col2[rowcnt];
					//FirstNamesFemales
					dataInsertTable[insrow][2]=col3[rowcnt];
					//LastNames
					dataInsertTable[insrow][3]=col4[rowcnt];
					//Logins
					dataInsertTable[insrow][4]=col5[rowcnt];
					//Passwords
					dataInsertTable[insrow][5]=col6[rowcnt];
					//Dates
					dataInsertTable[insrow][6]=col7[rowcnt];
				//INST AND DEPT STUFF
					//institutions
					dataInsertTable[insrow][7]=col8[rowcnt];
					//departments
					dataInsertTable[insrow][8]=col9[rowcnt];
				//ADDRESS STUFF
					//streets
					dataInsertTable[insrow][9]=col10[rowcnt];
					//cities
					dataInsertTable[insrow][10]=col11[rowcnt];
					//states
					dataInsertTable[insrow][11]=col12[rowcnt];
					//zip
					dataInsertTable[insrow][12]=col13[rowcnt];
					//phone
					dataInsertTable[insrow][13]=col14[rowcnt];
					//fax
					dataInsertTable[insrow][14]=col15[rowcnt];
					
					insrow++;
			}

			for (int rowcnt = 0; rowcnt < maxrecs; rowcnt++) {
			
				UserImpl u = new UserImpl();
				
				AddressImpl a = new AddressImpl();
				a.setStreet(dataInsertTable[rowcnt][9]);
				a.setCity(dataInsertTable[rowcnt][10]);
				a.setState(dataInsertTable[rowcnt][11]);
				a.setZipCode(dataInsertTable[rowcnt][12]);
				a.setCountry("United States");
				a.setPhoneNumber(dataInsertTable[rowcnt][13]);
				a.setFaxNumber(dataInsertTable[rowcnt][14]);
				System.out.println("\t\t\t\tAdding Address object to objsArr, that contains: "+a.getStreet()+", "+a.getCity()+", "+a.getState()+", "+a.getZipCode()+", "+a.getCountry()+", "+a.getPhoneNumber()+", "+a.getFaxNumber());
				//create(a);
				++objcnt;
				objsArr[objcnt]=a;

				InstitutionImpl i = new InstitutionImpl();
				if(dataInsertTable[rowcnt][7].length()>50)
					i.setName(dataInsertTable[rowcnt][7].substring(0,49));
				else
					i.setName(dataInsertTable[rowcnt][7]);
				System.out.println("\t\t\t\tAdding Institution object to objsArr, that contains: "+i.getName());
				//create(i);
				++objcnt;
				objsArr[objcnt]=i;

				DepartmentImpl d = new DepartmentImpl();	
				if(dataInsertTable[rowcnt][8].length()>50)
					d.setName(dataInsertTable[rowcnt][8].substring(0,49));
				else
					d.setName(dataInsertTable[rowcnt][8]);
				System.out.println("\t\t\t\tAdding Department object to objsArr, that contains: "+d.getName());
				//create(d);
				++objcnt;
				objsArr[objcnt]=d;
								
				u.setComments(rmvTrailingBlanks(dataInsertTable[rowcnt][0]));
				u.setEmailAddress(dataInsertTable[rowcnt][1]);
				u.setFirstName(dataInsertTable[rowcnt][2]);
				u.setLastName(dataInsertTable[rowcnt][3]);
				u.setLoginName(dataInsertTable[rowcnt][4]);
				u.setPassword(dataInsertTable[rowcnt][5]);
				SimpleDateFormat sdf = new SimpleDateFormat( "MM/dd/yyyy" );
				Date sdate = sdf.parse( dataInsertTable[rowcnt][6] );
				u.setStartDate(sdate);
				u.setActivityStatus("Active");
				
//				u.setCollectionProtocolCollection(null);
//				u.setDepartment(null);
//				u.setAddress(null);
//				u.setInstitution(null);

				//u.setAddress(a);
				//u.setDepartment(d);
				//u.setInstitution(i);
				System.out.println("\t\t\t\tAdding Institution object to objsArr, that contains: "+u.getActivityStatus()+", "+u.getComments()+", "+u.getEmailAddress()+", "+u.getFirstName()+", "+u.getLastName()+", "+u.getLoginName()+", "+u.getPassword()+", "+u.getStartDate());
				//create(u);
				++objcnt;
				objsArr[objcnt]=u;
				
				System.out.println("\t\t\t\tCalling create(objsArr) to save/commit all associated objects, in the array of objects...");
				create(objsArr);

		     }
		    
		    System.out.println("\t\t\t\tExiting buildSite()");
	}