<?xml version="1.0"?>

<!-- ================================================================= -->
<!-- caTRIP master build file                                          -->
<!-- ================================================================= -->

<project name="catrip-1.0" default="all" basedir=".">
	<!-- Give user the chance to override properties -->
	<property environment="env" />
	<property file="build.properties" />

	<!-- layout info -->
	<property name="antfiles.dir" location="${basedir}/antfiles" />
	<property name="management.dir" location="${antfiles.dir}/management" />
	<property name="projects.dir" location="${basedir}/projects" />
	<property name="reports.dir" location="${basedir}/reports" />
	<property name="share.dir" location="${basedir}/share" />
	<property name="test.dir" location="${basedir}/test" />
	<property name="junit.dir" location="${share.dir}/junit" />
	<property name="cagrid.dir" location="${share.dir}/cagrid" />
	<property name="xmlbeans.dir" location="${share.dir}/xmlbeans"/>
	<property name="junit.results.dir" location="${test.dir}/logs"/>
	

	<!-- import testing properties -->
	<property file="${antfiles.dir}/test.properties" />

	<!-- import other ant scripts -->
	<import file="${antfiles.dir}/build-artifacts.xml" />
	<import file="${antfiles.dir}/build-test.xml" />
	<import file="${antfiles.dir}/build-reports.xml" />

	<!-- define global properties -->
	<property name="cobertura.home" location="${basedir}/share/cobertura-1.8"/>
	<path id="cobertura.classpath">
	    <fileset dir="${cobertura.home}">
	        <include name="cobertura.jar" />
	        <include name="lib/**/*.jar" />
	    </fileset>
	</path>


	<!-- ================================================================================ -->
	<!--                          DEFINE THE SUB PROJECTS                                 -->
	<!-- ================================================================================ -->
	<!-- The name should be the path relative from projects.dir.  Its strongly encouraged you use a flat layout caTissueCAEDataService, caTissueCoreDataService,  -->
	<property name="projects.list" value="ctom, gui, queryengine, cae_reengineering, security-password, security-dukeidp, test-system" />

	<!-- ================================================================================ -->
	<!--                  DEFINE THE SUB PROJECTS THAT SUPPORT TESTING                    -->
	<!-- ================================================================================ -->
	<!-- This should be a subset of the projects above -->
	<property name="testable.projects.list" value="gui, queryengine, cae_reengineering, security-password, security-dukeidp" />

	<!-- ======================================================================================= -->
	<!--                  DEFINE THE SUB PROJECTS THAT SUPPORT SYSTEM TESTING                    -->
	<!-- ======================================================================================= -->
	<!-- This should be a subset of the projects above -->
	<property name="system.testable.projects.list" value="test-system" />

	<!-- ================================================================================ -->
	<!--                  DEFINE THE SUB PROJECTS THAT SUPPORT REPORTING                  -->
	<!-- ================================================================================ -->
	<!-- This should be a subset of the projects above -->
	<property name="reportable.projects.list" value="ctom, gui, queryengine, caTissueCAEDataService, caTissueCoreDataService, cae_reengineering, security-password, security-dukeidp, test-report, test-system" />


	<!-- =============================================================== -->
	<!-- Bootstrap the build by setting up the structure and building    -->
	<!-- our custom ant tasks.                                           -->
	<!-- =============================================================== -->
	<target name="prepare">
		<tstamp />
		<mkdir dir="${management.dir}/build" />
		<javac srcdir="${management.dir}/src" destdir="${management.dir}/build" debug="on" deprecation="off" optimize="off">
			<classpath>
				<fileset dir="${ant.library.dir}">
					<include name="ant.jar" />
				</fileset>
				<path refid="cobertura.classpath"/>
			</classpath>
		</javac>

		<typedef name="artifact" classname="gov.nih.nci.cagrid.ant.Artifact" loaderref="artifact">
			<classpath>
				<pathelement location="${management.dir}/build" />
				<path refid="cobertura.classpath"/>
			</classpath>
		</typedef>
		<taskdef name="resolveDependencies" classname="gov.nih.nci.cagrid.ant.ResolveDependencies" loaderref="artifact">
			<classpath>
				<pathelement location="${management.dir}/build" />
				<path refid="cobertura.classpath"/>
			</classpath>
		</taskdef>

		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${share.dir}/ant-contrib/ant-contrib.jar" />
			</classpath>
		</taskdef>
	</target>


	<!-- =============================================================== -->
	<!-- CTOM                                                            -->
	<!-- =============================================================== -->

	<target name="build-ctom" depends="prepare" description="Builds the ctom project">
		<resolveDependencies extdir="${projects.dir}/ctom/ext">
			<artifact refid="common.test.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/ctom" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- CAE_REENGINEERING                                               -->
	<!-- =============================================================== -->

	<target name="build-cae_reengineering" depends="prepare" description="Builds the cae_reengineering project">
		<resolveDependencies extdir="${projects.dir}/cae_reengineering/ext">
			<artifact refid="common.test.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/cae_reengineering" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- caTissueCAEDataService                                          -->
	<!-- =============================================================== -->

	<target name="build-caTissueCAEDataService" depends="prepare" description="Builds the caTissueCAEDataService project">
		<resolveDependencies extdir="${projects.dir}/caTissueCAEDataService/ext">
			<artifact refid="common.test.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/caTissueCAEDataService" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- caTissueCoreDataService                                         -->
	<!-- =============================================================== -->

	<target name="build-caTissueCoreDataService" depends="prepare" description="Builds the caTissueCoreDataService project">
		<resolveDependencies extdir="${projects.dir}/caTissueCoreDataService/ext">
			<artifact refid="common.test.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/caTissueCoreDataService" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- GUI                                                             -->
	<!-- =============================================================== -->

	<target name="build-gui" depends="prepare" description="Builds the gui project">
		<resolveDependencies extdir="${projects.dir}/gui/ext">
			<artifact refid="common.test.jars" />
			<artifact refid="queryengine.jars" />
			<artifact refid="queryengine.schemas" />
			<artifact refid="caTissueCoreDataService.jars" />
			<artifact refid="cagrid.cadsr.jars" />
			<artifact refid="cagrid.data.jars" />
			<artifact refid="cagrid.discovery.jars" />
			<artifact refid="cagrid.introduce.jars" />
			<artifact refid="cagrid.metadata.jars" />
			<artifact refid="ant-contrib.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/gui" inheritAll="false" antfile="build.xml" target="all" />
	</target>
		
	<!-- =============================================================== -->
	<!-- QUERYENGINE                                                     -->
	<!-- =============================================================== -->

	<target name="build-queryengine" depends="prepare" description="Builds the queryengine project">
		<resolveDependencies extdir="${projects.dir}/queryengine/ext">
			<artifact refid="common.test.jars" />
			<artifact refid="xmlbeans.jars" />
			<artifact refid="caTissueCAEDataService.jars" />
			<artifact refid="caTissueCoreDataService.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/queryengine" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- SECURITY-PASSWORD                                               -->
	<!-- =============================================================== -->

	<target name="build-security-password" depends="prepare" description="Builds the security-password project">
		<resolveDependencies extdir="${projects.dir}/security-password/ext">
			<artifact refid="common.test.jars" />
			<artifact refid="cagrid.gridca.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/security-password" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- SECURITY-DUKEIDP                                                -->
	<!-- =============================================================== -->

	<target name="build-security-dukeidp" depends="prepare" description="Builds the security-dukeidp project">
		<resolveDependencies extdir="${projects.dir}/security-dukeidp/ext">
			<artifact refid="common.test.jars" />
			<artifact refid="cagrid.gridca.jars" />
			<artifact refid="security-password.jars" />
			<artifact refid="security-password.antfiles" />
		</resolveDependencies>
		<ant dir="${projects.dir}/security-dukeidp" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- TEST-REPORT                                                     -->
	<!-- =============================================================== -->

	<target name="build-test-report" depends="prepare" description="Builds the test-report project">
		<resolveDependencies extdir="${projects.dir}/test-report/ext">
			<artifact refid="common.test.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/test-report" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- TEST-SYSTEM                                                     -->
	<!-- =============================================================== -->

	<target name="build-test-system" depends="prepare" description="Builds the test-system project">
		<resolveDependencies extdir="${projects.dir}/test-system/ext">
			<artifact refid="common.test.jars" />
			<artifact refid="cagrid.coretests.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/test-system" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- ============================================================== -->
	<!-- Cleans up generated stuff                                      -->
	<!-- ============================================================== -->
	<target name="clean" depends="prepare" description="Cleans all projects.">
		<for list="${projects.list}" parallel="true" param="project.name" trim="true">
			<sequential>
				<echo message="Cleaning project @{project.name}." />
				<delete dir="${projects.dir}/@{project.name}/ext" />
				<ant dir="${projects.dir}/@{project.name}" inheritAll="false" antfile="build.xml" target="clean" />
			</sequential>
		</for>

		<delete failonerror="false">
			<fileset dir="${junit.results.dir}">
				<include name="*" />
			</fileset>
		</delete>
	</target>

	<!-- ============================================================== -->
	<!-- Builds the projects                                            -->
	<!-- ============================================================== -->
	<target name="build" depends="prepare" description="Builds all projects.">
		<for list="${projects.list}" parallel="false" param="project.name" trim="true">
			<sequential>
				<echo message="Building project @{project.name}." />
				<runtarget target="build-@{project.name}" />
				<echo message="Built project @{project.name}." />
			</sequential>
		</for>
	</target>

	<!-- ============================================================== -->
	<!-- Builds the projects                                            -->
	<!-- ============================================================== -->
	<target name="gui" depends="build-gui" description="Runs the caTRIP GUI.">
		<ant dir="${projects.dir}/gui" inheritAll="false" antfile="build.xml" target="run" />
	</target>

	<!-- ============================================================== -->
	<!-- Builds caTRIP from scratch                                     -->
	<!-- ============================================================== -->
	<target name="all" depends="clean, build" description="Cleans and builds all the projects."/>

</project>

