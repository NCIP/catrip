<?xml version="1.0"?>

<!-- ================================================================= -->
<!-- caTRIP master build file                                          -->
<!-- ================================================================= -->

<project name="catrip-1.0" default="all" basedir=".">
	<!-- Give user the chance to override properties -->
	<property environment="env" />
	<property file="build.properties" />

	<!-- layout info -->
	<property name="antfiles.dir" location="${basedir}/antfiles" />
	<property name="management.dir" location="${antfiles.dir}/management" />
	<property name="projects.dir" location="${basedir}/projects" />
	<property name="reports.dir" location="${basedir}/reports" />
	<property name="share.dir" location="${basedir}/share" />
	<property name="test.dir" location="${basedir}/test" />
	<property name="junit.dir" location="${share.dir}/junit" />

	<!-- import testing properties -->
	<property file="${antfiles.dir}/test.properties" />

	<!-- import other ant scripts -->
	<import file="${antfiles.dir}/build-test.xml" />
	<import file="${antfiles.dir}/build-reports.xml" />

	<!-- define global properties -->
	<property name="cobertura.home" location="${basedir}/share/cobertura-1.8"/>
	<path id="cobertura.classpath">
	    <fileset dir="${cobertura.home}">
	        <include name="cobertura.jar" />
	        <include name="lib/**/*.jar" />
	    </fileset>
	</path>

	<!-- =============================================================== -->
	<!-- Bootstrap the build by setting up the structure and building    -->
	<!-- our custom ant tasks.                                           -->
	<!-- =============================================================== -->
	<target name="prepare">
		<tstamp />
		<mkdir dir="${management.dir}/build" />
		<javac srcdir="${management.dir}/src" destdir="${management.dir}/build" debug="on" deprecation="off" optimize="off">
			<classpath>
				<fileset dir="${ant.library.dir}">
					<include name="ant.jar" />
				</fileset>
				<path refid="cobertura.classpath"/>
			</classpath>
		</javac>

		<typedef name="artifact" classname="gov.nih.nci.cagrid.ant.Artifact" loaderref="artifact">
			<classpath>
				<pathelement location="${management.dir}/build" />
				<path refid="cobertura.classpath"/>
			</classpath>
		</typedef>
		<taskdef name="resolveDependencies" classname="gov.nih.nci.cagrid.ant.ResolveDependencies" loaderref="artifact">
			<classpath>
				<pathelement location="${management.dir}/build" />
				<path refid="cobertura.classpath"/>
			</classpath>
		</taskdef>
	</target>


	<!-- =============================================================== -->
	<!-- Define the build artifacts (created/used by projects) here      -->
	<!--                                                                 -->
	<!-- NOTE:  These should be all of the files necessary to "depend" on-->
	<!-- the project (not just the built files).  Make a separate        -->
	<!-- artifact for groups of files that will probably be copied to    -->
	<!-- separate directoris (e.g. jars and conf files)                  -->
	<!-- =============================================================== -->
	<target name="defineArtifacts" depends="prepare">
		<artifact track="test" type="jars" id="common.test.jars">
			<fileset dir="${junit.dir}">
				<include name="jdepend*.jar" />
				<include name="junit*.jar" />
				<include name="xmlunit*.jar" />
			</fileset>
		</artifact>

		<artifact track="main" type="jars" id="gui.jars">
			<antcall target="build-gui" />
			<fileset dir="${projects.dir}/gui/build/jars">
				<include name="*.jar" />
				<exclude name="*test*.jar" />
			</fileset>
		</artifact>
		<artifact track="main" type="jars" id="queryengine.jars">
			<antcall target="build-queryengine" />
			<fileset dir="${projects.dir}/queryengine/build/jars">
				<include name="*.jar" />
				<exclude name="*test*.jar" />
			</fileset>
		</artifact>
		<artifact track="main" type="schemas" id="queryengine.schemas">
			<fileset dir="${projects.dir}/queryengine/schema">
				<include name="**/*.xsd" />
			</fileset>
		</artifact>
	</target>

	<!-- =============================================================== -->
	<!-- GUI                                                             -->
	<!-- =============================================================== -->

	<target name="build-gui" depends="prepare" description="Builds the gui project">
		<resolveDependencies extdir="${projects.dir}/gui/ext">
			<artifact refid="common.test.jars" />
			<artifact refid="queryengine.jars" />
			<artifact refid="queryengine.schemas" />
		</resolveDependencies>
		<ant dir="${projects.dir}/gui" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- QUERYENGINE                                                     -->
	<!-- =============================================================== -->

	<target name="build-queryengine" depends="prepare" description="Builds the queryengine project">
		<resolveDependencies extdir="${projects.dir}/queryengine/ext">
			<artifact refid="common.test.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/queryengine" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- ============================================================== -->
	<!-- Cleans up generated stuff                                      -->
	<!-- ============================================================== -->
	<target name="clean" description="Cleans all projects.">
		<delete dir="${antfiles.dir}/build" />

		<delete dir="${projects.dir}/gui/ext" />
		<ant dir="${projects.dir}/gui" inheritAll="false" antfile="build.xml" target="clean" />

		<delete dir="${projects.dir}/queryengine/ext" />
		<ant dir="${projects.dir}/queryengine" inheritAll="false" antfile="build.xml" target="clean" />
	</target>


	<!-- ============================================================== -->
	<!-- Builds caTRIP from scratch                                     -->
	<!-- ============================================================== -->
	<target name="all" depends="clean, build-queryengine, build-gui" />

</project>

